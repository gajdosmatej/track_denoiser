inputs = keras.layers.Input(shape=(12,14,208,1))
x = keras.layers.Conv3D(padding="same", strides=(1,1,1), kernel_size=(3,3,4), filters=10, activation="relu")(inputs)
x = keras.layers.MaxPooling3D((1,1,2))(x)
x = keras.layers.Conv3D(padding="same", strides=(1,1,1), kernel_size=(3,3,4), filters=10, activation="relu")(x)
x = keras.layers.MaxPooling3D((1,1,2))(x)
c = keras.layers.Conv3D(padding="same", strides=(1,1,1), kernel_size=(3,3,4), filters=10, activation="relu")(x)
x = keras.layers.MaxPooling3D((1,1,2))(c)
x = keras.layers.Conv3D(padding="same", strides=(1,1,1), kernel_size=(3,3,4), filters=20, activation="relu")(x)
x = keras.layers.UpSampling3D(size=(1,1,2))(x)
x = keras.layers.Conv3D(padding="same", strides=(1,1,1), kernel_size=(3,3,4), filters=10, activation="relu")(x)
x = keras.layers.UpSampling3D(size=(1,1,2))(x)
x = keras.layers.Conv3D(padding="same", strides=(1,1,1), kernel_size=(3,3,4), filters=10, activation="relu")(x)
x = keras.layers.UpSampling3D(size=(1,1,2))(x)
x = keras.layers.Conv3D(padding="same", strides=(1,1,1), kernel_size=(3,3,4), filters=10)(x)
x = keras.layers.Add()([x,inputs])
output = keras.layers.Conv3D(padding="same", strides=(1,1,1), kernel_size=(3,3,4), filters=1, activation="sigmoid")(x)